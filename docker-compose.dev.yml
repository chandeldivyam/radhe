version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: docker/dev/backend.dockerfile
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    environment:
      - POSTGRES_SERVER=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "8000:8000"
      - "5679:5679"
    depends_on:
      db:
        condition: service_healthy
      # opensearch:
      #   condition: service_started
    networks:
      - app_network

  db:
    image: pgvector/pgvector:pg16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    networks:
      - app_network

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app_network

  opensearch:
    image: opensearchproject/opensearch:2
    environment:
      - discovery.type=single-node
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      - cluster.name=radhe-dev
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - DISABLE_SECURITY_PLUGIN=true
      - logger.level=ERROR
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "9201:9200"
      - "9601:9600"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    profiles:
      - opensearch
    networks:
      - app_network

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2
    ports:
      - "5602:5601"
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    depends_on:
      - opensearch
    networks:
      - app_network
    profiles:
      - opensearch-dashboards
  
  celery_worker:
    build:
      context: .
      dockerfile: docker/dev/backend.dockerfile
    command: celery -A celery_worker worker --loglevel=info
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    depends_on:
      - redis
      - backend
    networks:
      - app_network

  flower:
    build:
      context: .
      dockerfile: docker/dev/backend.dockerfile
    command: celery -A celery_worker flower --port=5555 --basic_auth=${FLOWER_USER}:${FLOWER_PASSWORD}
    ports:
      - "5555:5555"
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    depends_on:
      - redis
      - celery_worker
    networks:
      - app_network
    profiles:
      - flower

  frontend:
    build:
      context: .
      dockerfile: docker/dev/frontend.dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3124:3000"
    depends_on:
      - backend
    networks:
      - app_network

  collaboration:
    build: 
      context: ./collaboration_service
      dockerfile: Dockerfile
    ports:
      - "1616:1234"
    volumes:
      - ./collaboration_service:/app
      - /app/node_modules
    networks:
      - app_network
    depends_on:
      - backend

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
  opensearch_data: